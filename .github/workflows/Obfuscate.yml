name: 构建混淆 BPB 面板

on:
  push:
    branches:
      - main
  schedule:
    # 每天凌晨 1:00 运行
    - cron: "0 1 * * *"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "latest"

      - name: 安装依赖
        run: |
          npm install javascript-obfuscator
          sudo apt-get update
          sudo apt-get install -y dos2unix

      - name: 下载远程 BPB worker js
        run: |
          set -e
          wget -O remote_origin.js https://raw.githubusercontent.com/bia-pain-bache/BPB-Worker-Panel/refs/heads/main/build/unobfuscated-worker.js
      - name: 比较本地和远程文件
        id: compare_files
        run: |
          set -e
          LOCAL_FILE="origin.js"
          REMOTE_FILE="remote_origin.js"

          # 如果本地文件不存在，则视为文件已更改
          if [ ! -f "$LOCAL_FILE" ]; then
            echo "文件 origin.js 不存在，视为已更改"
            echo "FILES_CHANGED=1" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # 强制刷新文件系统缓存
          sync

          # 比较文件
          DIFF=$(diff "$REMOTE_FILE" "$LOCAL_FILE")

          # 调试信息
          echo "---------- 调试信息 ----------"
          echo "remote_origin.js 内容:"
          cat "$REMOTE_FILE"
          echo "origin.js 内容:"
          cat "$LOCAL_FILE"
          echo "diff 命令的输出:"
          echo "$DIFF"
          echo "------------------------------"

          # 检查 diff 的输出是否为空
          if [ -z "$DIFF" ]; then
            echo "文件相同"
            echo "FILES_CHANGED=0" >> "$GITHUB_OUTPUT"
          else
            echo "文件不同"
            echo "FILES_CHANGED=1" >> "$GITHUB_OUTPUT"
          fi
      - name: 检查文件是否更改并决定是否退出
        if: steps.compare_files.outputs.FILES_CHANGED == '0'
        run: |
          echo "原始文件没有更改。退出。"
          exit 0

      - name: 覆盖本地文件并混淆 BPB worker js
        if: steps.compare_files.outputs.FILES_CHANGED != '0'
        run: |
          set -e
          cp remote_origin.js origin.js # 覆盖本地文件
          npx javascript-obfuscator origin.js --output _worker.js \
            --compact true \
            --control-flow-flattening true \
            --control-flow-flattening-threshold 1 \
            --dead-code-injection true \
            --dead-code-injection-threshold 1 \
            --identifier-names-generator hexadecimal \
            --rename-globals true \
            --string-array true \
            --string-array-encoding 'rc4' \
            --string-array-threshold 1 \
            --transform-object-keys true \
            --unicode-escape-sequence true

      - name: 提交更改
        if: steps.compare_files.outputs.FILES_CHANGED != '0'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: ':arrow_up: 更新最新 bpb 面板'
          commit_author: 'github-actions[bot] <github-actions[bot]@users.noreply.github.com>'
          push_options: '--set-upstream'
          only_add: _worker.js origin.js # 提交 _worker.js 和 origin.js
          gitignore: |
            node_modules/
            package-lock.json
            package.json

      - name: 创建 origin.js (如果不存在)
        if: steps.compare_files.outputs.FILES_CHANGED != '0'
        run: |
          set -e
          # 如果 origin.js 不存在，则创建它并将远程内容写入
          if [ ! -f "origin.js" ]; then
            cp remote_origin.js origin.js
          fi
